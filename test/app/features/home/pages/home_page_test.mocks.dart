// Mocks generated by Mockito 5.0.10 from annotations
// in numarketplace/test/app/features/home/pages/home_page_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:numarketplace/app/features/home/repostories/offers_repository.dart'
    as _i3;
import 'package:numarketplace/app/shared/models/customer_model.dart' as _i7;
import 'package:numarketplace/app/shared/models/offer_model.dart' as _i5;
import 'package:numarketplace/app/shared/repositories/customer_repository.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [OffersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOffersRepository extends _i1.Mock implements _i3.OffersRepository {
  MockOffersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, List<_i5.OfferModel>>> fetchAll() =>
      (super.noSuchMethod(Invocation.method(#fetchAll, []),
          returnValue: Future<_i2.Either<String, List<_i5.OfferModel>>>.value(
              _FakeEither<String, List<_i5.OfferModel>>())) as _i4
          .Future<_i2.Either<String, List<_i5.OfferModel>>>);
}

/// A class which mocks [CustomerRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomerRepository extends _i1.Mock
    implements _i6.CustomerRepository {
  MockCustomerRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<String, _i7.CustomerModel>> fetch() =>
      (super.noSuchMethod(Invocation.method(#fetch, []),
              returnValue: Future<_i2.Either<String, _i7.CustomerModel>>.value(
                  _FakeEither<String, _i7.CustomerModel>()))
          as _i4.Future<_i2.Either<String, _i7.CustomerModel>>);
}
